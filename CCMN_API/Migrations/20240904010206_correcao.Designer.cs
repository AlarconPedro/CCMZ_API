// <auto-generated />
using System;
using CCMZ_API;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CCMN_API.Migrations
{
    [DbContext(typeof(CCMNContext))]
    [Migration("20240904010206_correcao")]
    partial class correcao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CCMN_API.Models.TbCategoria", b =>
                {
                    b.Property<int>("CatCodigo")
                        .HasColumnType("int")
                        .HasColumnName("CAT_CODIGO");

                    b.Property<string>("CatNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CAT_NOME");

                    b.HasKey("CatCodigo");

                    b.ToTable("TB_CATEGORIAS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbComunidade", b =>
                {
                    b.Property<int>("ComCodigo")
                        .HasColumnType("int")
                        .HasColumnName("COM_CODIGO");

                    b.Property<string>("ComCidade")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COM_CIDADE");

                    b.Property<string>("ComNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("COM_NOME");

                    b.Property<string>("ComUf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("COM_UF");

                    b.HasKey("ComCodigo");

                    b.ToTable("TB_COMUNIDADE", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbDespesaComunidadeEvento", b =>
                {
                    b.Property<int>("DceCodigo")
                        .HasColumnType("int")
                        .HasColumnName("DCE_CODIGO");

                    b.Property<int?>("ComCodigo")
                        .HasColumnType("int")
                        .HasColumnName("COM_CODIGO");

                    b.Property<string>("DceNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DCE_NOME");

                    b.Property<int?>("DceQuantiadde")
                        .HasColumnType("int")
                        .HasColumnName("DCE_QUANTIADDE");

                    b.Property<decimal?>("DceValor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DCE_VALOR");

                    b.Property<int?>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.HasKey("DceCodigo");

                    b.HasIndex("ComCodigo");

                    b.HasIndex("EveCodigo");

                    b.ToTable("TB_DESPESA_COMUNIDADE_EVENTO", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbEvento", b =>
                {
                    b.Property<int>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.Property<decimal?>("DseCozinha")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DSE_COZINHA");

                    b.Property<decimal?>("DseHostiaria")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DSE_HOSTIARIA");

                    b.Property<DateTime?>("EveDatafim")
                        .HasColumnType("datetime")
                        .HasColumnName("EVE_DATAFIM");

                    b.Property<DateTime?>("EveDatainicio")
                        .HasColumnType("datetime")
                        .HasColumnName("EVE_DATAINICIO");

                    b.Property<string>("EveNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EVE_NOME");

                    b.Property<string>("EveTipoCobranca")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("EVE_TIPO_COBRANCA");

                    b.Property<decimal?>("EveValor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("EVE_VALOR");

                    b.HasKey("EveCodigo");

                    b.ToTable("TB_EVENTOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbFormulario", b =>
                {
                    b.Property<int>("ForCodigo")
                        .HasColumnType("int")
                        .HasColumnName("FOR_CODIGO");

                    b.Property<int?>("ComCodigo")
                        .HasColumnType("int")
                        .HasColumnName("COM_CODIGO");

                    b.Property<int?>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.Property<DateTime?>("ForDatacriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("FOR_DATACRIACAO");

                    b.Property<string>("ForEndereco")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FOR_ENDERECO");

                    b.Property<string>("ForNome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FOR_NOME");

                    b.Property<bool?>("ForStatus")
                        .HasColumnType("bit")
                        .HasColumnName("FOR_STATUS");

                    b.Property<string>("ForTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("FOR_TIPO");

                    b.HasKey("ForCodigo");

                    b.HasIndex("ComCodigo");

                    b.HasIndex("EveCodigo");

                    b.ToTable("TB_FORMULARIOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbFornecedore", b =>
                {
                    b.Property<int>("ForCodigo")
                        .HasColumnType("int")
                        .HasColumnName("FOR_CODIGO");

                    b.Property<string>("ForNome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("FOR_NOME");

                    b.HasKey("ForCodigo");

                    b.ToTable("TB_FORNECEDORES", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbMovimentoProduto", b =>
                {
                    b.Property<int>("MovCodigo")
                        .HasColumnType("int")
                        .HasColumnName("MOV_CODIGO");

                    b.Property<DateTime?>("MovData")
                        .HasColumnType("datetime")
                        .HasColumnName("MOV_DATA");

                    b.Property<int?>("MovQuantidade")
                        .HasColumnType("int")
                        .HasColumnName("MOV_QUANTIDADE");

                    b.Property<string>("MovTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("MOV_TIPO");

                    b.Property<int?>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.HasKey("MovCodigo")
                        .HasName("PK_TB_MOVIMENTO_ESTOQUE");

                    b.HasIndex("ProCodigo");

                    b.ToTable("TB_MOVIMENTO_PRODUTOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbProduto", b =>
                {
                    b.Property<int>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.Property<int?>("CatCodigo")
                        .HasColumnType("int")
                        .HasColumnName("CAT_CODIGO");

                    b.Property<string>("ProCodBarras")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PRO_COD_BARRAS");

                    b.Property<string>("ProDescricao")
                        .HasColumnType("text")
                        .HasColumnName("PRO_DESCRICAO");

                    b.Property<string>("ProMedida")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PRO_MEDIDA");

                    b.Property<string>("ProNome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PRO_NOME");

                    b.Property<int?>("ProQuantidade")
                        .HasColumnType("int")
                        .HasColumnName("PRO_QUANTIDADE");

                    b.Property<string>("ProUniMedida")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PRO_UNI_MEDIDA");

                    b.Property<decimal?>("ProValor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("PRO_VALOR");

                    b.HasKey("ProCodigo");

                    b.HasIndex("CatCodigo");

                    b.ToTable("TB_PRODUTOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbUsuario", b =>
                {
                    b.Property<int>("UsuCodigo")
                        .HasColumnType("int")
                        .HasColumnName("USU_CODIGO");

                    b.Property<bool?>("UsuAcessoEstoque")
                        .HasColumnType("bit")
                        .HasColumnName("USU_ACESSO_ESTOQUE");

                    b.Property<bool?>("UsuAcessoFinanceiro")
                        .HasColumnType("bit")
                        .HasColumnName("USU_ACESSO_FINANCEIRO");

                    b.Property<bool?>("UsuAcessoHospedagem")
                        .HasColumnType("bit")
                        .HasColumnName("USU_ACESSO_HOSPEDAGEM");

                    b.Property<string>("UsuCodigoFirebase")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USU_CODIGO_FIREBASE");

                    b.Property<string>("UsuEmail")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USU_EMAIL");

                    b.Property<string>("UsuNome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("USU_NOME");

                    b.Property<string>("UsuSenha")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("USU_SENHA");

                    b.HasKey("UsuCodigo");

                    b.ToTable("TB_USUARIOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbBloco", b =>
                {
                    b.Property<int>("BloCodigo")
                        .HasColumnType("int")
                        .HasColumnName("BLO_CODIGO");

                    b.Property<string>("BloNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BLO_NOME");

                    b.HasKey("BloCodigo");

                    b.ToTable("TB_BLOCOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbCasai", b =>
                {
                    b.Property<int>("CasCodigo")
                        .HasColumnType("int")
                        .HasColumnName("CAS_CODIGO");

                    b.Property<int?>("CasEsposa")
                        .HasColumnType("int")
                        .HasColumnName("CAS_ESPOSA");

                    b.Property<int?>("CasEsposo")
                        .HasColumnType("int")
                        .HasColumnName("CAS_ESPOSO");

                    b.HasKey("CasCodigo");

                    b.HasIndex("CasEsposa");

                    b.HasIndex("CasEsposo");

                    b.ToTable("TB_CASAIS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbDespesaEvento", b =>
                {
                    b.Property<int>("DseCodigo")
                        .HasColumnType("int")
                        .HasColumnName("DSE_CODIGO");

                    b.Property<string>("DseNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DSE_NOME");

                    b.Property<int?>("DseQuantidade")
                        .HasColumnType("int")
                        .HasColumnName("DSE_QUANTIDADE");

                    b.Property<decimal?>("DseValor")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("DSE_VALOR");

                    b.Property<int?>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.HasKey("DseCodigo");

                    b.HasIndex("EveCodigo");

                    b.ToTable("TB_DESPESA_EVENTO", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbEventoPessoa", b =>
                {
                    b.Property<int>("EvpCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVP_CODIGO");

                    b.Property<int?>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.Property<bool?>("EvpCobrante")
                        .HasColumnType("bit")
                        .HasColumnName("EVP_COBRANTE");

                    b.Property<bool?>("EvpPagante")
                        .HasColumnType("bit")
                        .HasColumnName("EVP_PAGANTE");

                    b.Property<int?>("PesCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PES_CODIGO");

                    b.HasKey("EvpCodigo");

                    b.HasIndex("EveCodigo");

                    b.HasIndex("PesCodigo");

                    b.ToTable("TB_EVENTO_PESSOAS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbEventoQuarto", b =>
                {
                    b.Property<int>("EvqCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVQ_CODIGO");

                    b.Property<int?>("EveCodigo")
                        .HasColumnType("int")
                        .HasColumnName("EVE_CODIGO");

                    b.Property<int?>("QuaCodigo")
                        .HasColumnType("int")
                        .HasColumnName("QUA_CODIGO");

                    b.HasKey("EvqCodigo");

                    b.HasIndex("EveCodigo");

                    b.HasIndex("QuaCodigo");

                    b.ToTable("TB_EVENTO_QUARTOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbParticipantesCupon", b =>
                {
                    b.Property<int>("ParcupCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PARCUP_CODIGO");

                    b.Property<int?>("CupCodigo")
                        .HasColumnType("int")
                        .HasColumnName("CUP_CODIGO");

                    b.Property<int?>("ParCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PAR_CODIGO");

                    b.HasKey("ParcupCodigo");

                    b.HasIndex("CupCodigo");

                    b.HasIndex("ParCodigo");

                    b.ToTable("TB_PARTICIPANTES_CUPONS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPessoa", b =>
                {
                    b.Property<int>("PesCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PES_CODIGO");

                    b.Property<int?>("ComCodigo")
                        .HasColumnType("int")
                        .HasColumnName("COM_CODIGO");

                    b.Property<string>("PesCatequista")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PES_CATEQUISTA");

                    b.Property<string>("PesGenero")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PES_GENERO");

                    b.Property<string>("PesNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PES_NOME");

                    b.Property<string>("PesObservacao")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PES_OBSERVACAO");

                    b.Property<string>("PesResponsavel")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PES_RESPONSAVEL");

                    b.Property<string>("PesSalmista")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("PES_SALMISTA");

                    b.HasKey("PesCodigo");

                    b.HasIndex("ComCodigo");

                    b.ToTable("TB_PESSOAS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPromoco", b =>
                {
                    b.Property<int>("ProCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProCodigo"));

                    b.Property<DateTime?>("ProDatafim")
                        .HasColumnType("datetime")
                        .HasColumnName("PRO_DATAFIM");

                    b.Property<DateTime?>("ProDatainicio")
                        .HasColumnType("datetime")
                        .HasColumnName("PRO_DATAINICIO");

                    b.Property<string>("ProDescricao")
                        .HasColumnType("text")
                        .HasColumnName("PRO_DESCRICAO");

                    b.Property<string>("ProNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PRO_NOME");

                    b.HasKey("ProCodigo")
                        .HasName("PK_TB_PROMOCAO");

                    b.ToTable("TB_PROMOCOES", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesCupon", b =>
                {
                    b.Property<int>("CupCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CUP_CODIGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CupCodigo"));

                    b.Property<string>("CupNumero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CUP_NUMERO");

                    b.Property<bool?>("CupSorteado")
                        .HasColumnType("bit")
                        .HasColumnName("CUP_SORTEADO");

                    b.Property<bool?>("CupVendido")
                        .HasColumnType("bit")
                        .HasColumnName("CUP_VENDIDO");

                    b.Property<int?>("ParCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PAR_CODIGO");

                    b.Property<int>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.HasKey("CupCodigo")
                        .HasName("PK_TB_CUPOM");

                    b.HasIndex("ParCodigo");

                    b.HasIndex("ProCodigo");

                    b.ToTable("TB_PROMOCOES_CUPONS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesParticipante", b =>
                {
                    b.Property<int>("ParCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PAR_CODIGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParCodigo"));

                    b.Property<string>("ParCidade")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PAR_CIDADE");

                    b.Property<string>("ParCpf")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAR_CPF");

                    b.Property<DateTime?>("ParDatanasc")
                        .HasColumnType("date")
                        .HasColumnName("PAR_DATANASC");

                    b.Property<string>("ParEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PAR_EMAIL");

                    b.Property<string>("ParEndereco")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("PAR_ENDERECO");

                    b.Property<string>("ParFone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PAR_FONE");

                    b.Property<string>("ParNome")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("PAR_NOME");

                    b.Property<string>("ParUf")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("PAR_UF");

                    b.Property<int?>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.HasKey("ParCodigo");

                    b.HasIndex("ProCodigo");

                    b.ToTable("TB_PROMOCOES_PARTICIPANTES", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesPremio", b =>
                {
                    b.Property<int>("PreCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PRE_CODIGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PreCodigo"));

                    b.Property<string>("PreDescricao")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("PRE_DESCRICAO")
                        .IsFixedLength();

                    b.Property<string>("PreNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("PRE_NOME");

                    b.Property<int?>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.HasKey("PreCodigo");

                    b.HasIndex("ProCodigo");

                    b.ToTable("TB_PROMOCOES_PREMIOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesSorteio", b =>
                {
                    b.Property<int>("SorCodigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SOR_CODIGO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SorCodigo"));

                    b.Property<int?>("CupCodigo")
                        .HasColumnType("int")
                        .HasColumnName("CUP_CODIGO");

                    b.Property<int?>("ParCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PAR_CODIGO");

                    b.Property<int?>("PreCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRE_CODIGO");

                    b.Property<int?>("ProCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PRO_CODIGO");

                    b.Property<DateTime?>("SorData")
                        .HasColumnType("datetime")
                        .HasColumnName("SOR_DATA");

                    b.HasKey("SorCodigo");

                    b.HasIndex("CupCodigo");

                    b.HasIndex("ParCodigo");

                    b.HasIndex("PreCodigo");

                    b.HasIndex("ProCodigo");

                    b.ToTable("TB_PROMOCOES_SORTEIO", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbQuarto", b =>
                {
                    b.Property<int>("QuaCodigo")
                        .HasColumnType("int")
                        .HasColumnName("QUA_CODIGO");

                    b.Property<int?>("BloCodigo")
                        .HasColumnType("int")
                        .HasColumnName("BLO_CODIGO");

                    b.Property<string>("QuaNome")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("QUA_NOME");

                    b.Property<int?>("QuaQtdcamas")
                        .HasColumnType("int")
                        .HasColumnName("QUA_QTDCAMAS");

                    b.HasKey("QuaCodigo");

                    b.HasIndex("BloCodigo");

                    b.ToTable("TB_QUARTOS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.TbQuartoPessoa", b =>
                {
                    b.Property<int>("QupCodigo")
                        .HasColumnType("int")
                        .HasColumnName("QUP_CODIGO");

                    b.Property<bool>("PesChave")
                        .HasColumnType("bit")
                        .HasColumnName("PES_CHAVE");

                    b.Property<bool>("PesCheckin")
                        .HasColumnType("bit")
                        .HasColumnName("PES_CHECKIN");

                    b.Property<int?>("PesCodigo")
                        .HasColumnType("int")
                        .HasColumnName("PES_CODIGO");

                    b.Property<bool>("PesNaovem")
                        .HasColumnType("bit")
                        .HasColumnName("PES_NAOVEM");

                    b.Property<int?>("QuaCodigo")
                        .HasColumnType("int")
                        .HasColumnName("QUA_CODIGO");

                    b.HasKey("QupCodigo");

                    b.HasIndex("PesCodigo");

                    b.HasIndex("QuaCodigo");

                    b.ToTable("TB_QUARTO_PESSOAS", (string)null);
                });

            modelBuilder.Entity("CCMN_API.Models.TbDespesaComunidadeEvento", b =>
                {
                    b.HasOne("CCMN_API.Models.TbComunidade", "ComCodigoNavigation")
                        .WithMany("TbDespesaComunidadeEventos")
                        .HasForeignKey("ComCodigo")
                        .HasConstraintName("ComunidadeEventoDespesa");

                    b.HasOne("CCMN_API.Models.TbEvento", "EveCodigoNavigation")
                        .WithMany("TbDespesaComunidadeEventos")
                        .HasForeignKey("EveCodigo")
                        .HasConstraintName("DespesasEvento");

                    b.Navigation("ComCodigoNavigation");

                    b.Navigation("EveCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.Models.TbFormulario", b =>
                {
                    b.HasOne("CCMN_API.Models.TbComunidade", "ComCodigoNavigation")
                        .WithMany("TbFormularios")
                        .HasForeignKey("ComCodigo")
                        .HasConstraintName("ComunidadeFormulario");

                    b.HasOne("CCMN_API.Models.TbEvento", "EveCodigoNavigation")
                        .WithMany("TbFormularios")
                        .HasForeignKey("EveCodigo")
                        .HasConstraintName("EventoFomulario");

                    b.Navigation("ComCodigoNavigation");

                    b.Navigation("EveCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.Models.TbMovimentoProduto", b =>
                {
                    b.HasOne("CCMN_API.Models.TbProduto", "ProCodigoNavigation")
                        .WithMany("TbMovimentoProdutos")
                        .HasForeignKey("ProCodigo")
                        .HasConstraintName("MOVIMENTO_PRODUTO");

                    b.Navigation("ProCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.Models.TbProduto", b =>
                {
                    b.HasOne("CCMN_API.Models.TbCategoria", "CatCodigoNavigation")
                        .WithMany("TbProdutos")
                        .HasForeignKey("CatCodigo")
                        .HasConstraintName("CATEGORIA");

                    b.Navigation("CatCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbCasai", b =>
                {
                    b.HasOne("CCMN_API.TbPessoa", "CasEsposaNavigation")
                        .WithMany("TbCasaiCasEsposaNavigations")
                        .HasForeignKey("CasEsposa")
                        .HasConstraintName("FK_ESPOSA");

                    b.HasOne("CCMN_API.TbPessoa", "CasEsposoNavigation")
                        .WithMany("TbCasaiCasEsposoNavigations")
                        .HasForeignKey("CasEsposo")
                        .HasConstraintName("FK_ESPOSO");

                    b.Navigation("CasEsposaNavigation");

                    b.Navigation("CasEsposoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbDespesaEvento", b =>
                {
                    b.HasOne("CCMN_API.Models.TbEvento", "EveCodigoNavigation")
                        .WithMany("TbDespesaEventos")
                        .HasForeignKey("EveCodigo")
                        .HasConstraintName("FK_TB_DESPESA_EVENTO_TB_EVENTOS");

                    b.Navigation("EveCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbEventoPessoa", b =>
                {
                    b.HasOne("CCMN_API.Models.TbEvento", "EveCodigoNavigation")
                        .WithMany("TbEventoPessoas")
                        .HasForeignKey("EveCodigo")
                        .HasConstraintName("Evento");

                    b.HasOne("CCMN_API.TbPessoa", "PesCodigoNavigation")
                        .WithMany("TbEventoPessoas")
                        .HasForeignKey("PesCodigo")
                        .HasConstraintName("Pessoa");

                    b.Navigation("EveCodigoNavigation");

                    b.Navigation("PesCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbEventoQuarto", b =>
                {
                    b.HasOne("CCMN_API.Models.TbEvento", "EveCodigoNavigation")
                        .WithMany("TbEventoQuartos")
                        .HasForeignKey("EveCodigo")
                        .HasConstraintName("FK_TB_EVENTO_QUARTOS_TB_EVENTOS");

                    b.HasOne("CCMN_API.TbQuarto", "QuaCodigoNavigation")
                        .WithMany("TbEventoQuartos")
                        .HasForeignKey("QuaCodigo")
                        .HasConstraintName("FK_TB_EVENTO_QUARTOS_TB_QUARTOS");

                    b.Navigation("EveCodigoNavigation");

                    b.Navigation("QuaCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbParticipantesCupon", b =>
                {
                    b.HasOne("CCMN_API.TbPromocoesCupon", "CupCodigoNavigation")
                        .WithMany("TbParticipantesCupons")
                        .HasForeignKey("CupCodigo")
                        .HasConstraintName("CUPONS");

                    b.HasOne("CCMN_API.TbPromocoesParticipante", "ParCodigoNavigation")
                        .WithMany("TbParticipantesCupons")
                        .HasForeignKey("ParCodigo")
                        .HasConstraintName("PARTICIPANTES");

                    b.Navigation("CupCodigoNavigation");

                    b.Navigation("ParCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbPessoa", b =>
                {
                    b.HasOne("CCMN_API.Models.TbComunidade", "ComCodigoNavigation")
                        .WithMany("TbPessoas")
                        .HasForeignKey("ComCodigo")
                        .HasConstraintName("FK_TB_PESSOAS_TB_COMUNIDADE");

                    b.Navigation("ComCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesCupon", b =>
                {
                    b.HasOne("CCMN_API.TbPromocoesParticipante", "ParCodigoNavigation")
                        .WithMany("TbPromocoesCupons")
                        .HasForeignKey("ParCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_CUPONS_TB_PROMOCOES_PARTICIPANTES");

                    b.HasOne("CCMN_API.TbPromoco", "ProCodigoNavigation")
                        .WithMany("TbPromocoesCupons")
                        .HasForeignKey("ProCodigo")
                        .IsRequired()
                        .HasConstraintName("FK_TB_CUPOM_TB_PROMOCAO");

                    b.Navigation("ParCodigoNavigation");

                    b.Navigation("ProCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesParticipante", b =>
                {
                    b.HasOne("CCMN_API.TbPromoco", "ProCodigoNavigation")
                        .WithMany("TbPromocoesParticipantes")
                        .HasForeignKey("ProCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_PARTICIPANTES_TB_PROMOCOES");

                    b.Navigation("ProCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesPremio", b =>
                {
                    b.HasOne("CCMN_API.TbPromoco", "ProCodigoNavigation")
                        .WithMany("TbPromocoesPremios")
                        .HasForeignKey("ProCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_PREMIOS_TB_PROMOCOES");

                    b.Navigation("ProCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesSorteio", b =>
                {
                    b.HasOne("CCMN_API.TbPromocoesCupon", "CupCodigoNavigation")
                        .WithMany("TbPromocoesSorteios")
                        .HasForeignKey("CupCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_SORTEIO_TB_PROMOCOES_CUPONS");

                    b.HasOne("CCMN_API.TbPromocoesParticipante", "ParCodigoNavigation")
                        .WithMany("TbPromocoesSorteios")
                        .HasForeignKey("ParCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_SORTEIO_TB_PROMOCOES_PARTICIPANTES");

                    b.HasOne("CCMN_API.TbPromocoesPremio", "PreCodigoNavigation")
                        .WithMany("TbPromocoesSorteios")
                        .HasForeignKey("PreCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_SORTEIO_TB_PROMOCOES_PREMIOS");

                    b.HasOne("CCMN_API.TbPromoco", "ProCodigoNavigation")
                        .WithMany("TbPromocoesSorteios")
                        .HasForeignKey("ProCodigo")
                        .HasConstraintName("FK_TB_PROMOCOES_SORTEIO_TB_PROMOCOES");

                    b.Navigation("CupCodigoNavigation");

                    b.Navigation("ParCodigoNavigation");

                    b.Navigation("PreCodigoNavigation");

                    b.Navigation("ProCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbQuarto", b =>
                {
                    b.HasOne("CCMN_API.TbBloco", "BloCodigoNavigation")
                        .WithMany("TbQuartos")
                        .HasForeignKey("BloCodigo")
                        .HasConstraintName("FK_TB_QUARTOS_TB_BLOCOS");

                    b.Navigation("BloCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.TbQuartoPessoa", b =>
                {
                    b.HasOne("CCMN_API.TbPessoa", "PesCodigoNavigation")
                        .WithMany("TbQuartoPessoas")
                        .HasForeignKey("PesCodigo")
                        .HasConstraintName("FK_TB_QUARTO_PESSOAS_TB_PESSOAS");

                    b.HasOne("CCMN_API.TbQuarto", "QuaCodigoNavigation")
                        .WithMany("TbQuartoPessoas")
                        .HasForeignKey("QuaCodigo")
                        .HasConstraintName("FK_TB_QUARTO_PESSOAS_TB_QUARTOS");

                    b.Navigation("PesCodigoNavigation");

                    b.Navigation("QuaCodigoNavigation");
                });

            modelBuilder.Entity("CCMN_API.Models.TbCategoria", b =>
                {
                    b.Navigation("TbProdutos");
                });

            modelBuilder.Entity("CCMN_API.Models.TbComunidade", b =>
                {
                    b.Navigation("TbDespesaComunidadeEventos");

                    b.Navigation("TbFormularios");

                    b.Navigation("TbPessoas");
                });

            modelBuilder.Entity("CCMN_API.Models.TbEvento", b =>
                {
                    b.Navigation("TbDespesaComunidadeEventos");

                    b.Navigation("TbDespesaEventos");

                    b.Navigation("TbEventoPessoas");

                    b.Navigation("TbEventoQuartos");

                    b.Navigation("TbFormularios");
                });

            modelBuilder.Entity("CCMN_API.Models.TbProduto", b =>
                {
                    b.Navigation("TbMovimentoProdutos");
                });

            modelBuilder.Entity("CCMN_API.TbBloco", b =>
                {
                    b.Navigation("TbQuartos");
                });

            modelBuilder.Entity("CCMN_API.TbPessoa", b =>
                {
                    b.Navigation("TbCasaiCasEsposaNavigations");

                    b.Navigation("TbCasaiCasEsposoNavigations");

                    b.Navigation("TbEventoPessoas");

                    b.Navigation("TbQuartoPessoas");
                });

            modelBuilder.Entity("CCMN_API.TbPromoco", b =>
                {
                    b.Navigation("TbPromocoesCupons");

                    b.Navigation("TbPromocoesParticipantes");

                    b.Navigation("TbPromocoesPremios");

                    b.Navigation("TbPromocoesSorteios");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesCupon", b =>
                {
                    b.Navigation("TbParticipantesCupons");

                    b.Navigation("TbPromocoesSorteios");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesParticipante", b =>
                {
                    b.Navigation("TbParticipantesCupons");

                    b.Navigation("TbPromocoesCupons");

                    b.Navigation("TbPromocoesSorteios");
                });

            modelBuilder.Entity("CCMN_API.TbPromocoesPremio", b =>
                {
                    b.Navigation("TbPromocoesSorteios");
                });

            modelBuilder.Entity("CCMN_API.TbQuarto", b =>
                {
                    b.Navigation("TbEventoQuartos");

                    b.Navigation("TbQuartoPessoas");
                });
#pragma warning restore 612, 618
        }
    }
}
